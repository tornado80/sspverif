package Sample {
    state {
        k256: Bits(256),
        k384: Bits(384),
        k512: Bits(512),
        input: Integer,
        output: Bits(*)
    }

    params {
        cast256: fn Bits(256) -> Bits(*),
        cast384: fn Bits(384) -> Bits(*),
        cast512: fn Bits(512) -> Bits(*),
        default: fn Integer -> Bits(*),
    }

    oracle SAMPLE(n: Integer) -> Bits(*) {
        input <- n;
        if (n == 256) {
            k256 <-$ Bits(256);
            output <- cast256(k256);
            return cast256(k256);
        }
        if (n == 384) {
            k384 <-$ Bits(384);
            output <- cast384(k384);
            return cast384(k384);
        }
        if (n == 512) {
            k512 <-$ Bits(512);
            output <- cast512(k512);
            return cast512(k512);
        }
        abort;
        /* This should never happen and we put it here to make "function" total */
        return default(0);
    }
}