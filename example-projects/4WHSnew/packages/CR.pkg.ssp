package CR {
    params {
        n: Integer,
        prf: fn Bits(256), Integer, Integer, Bits(256), Bits(256), Bool ->  Bits(256),
        mac: fn Bits(256), Bits(256), Integer -> Bits(256),
        b: Bool
    }
    
    state {
          PRFinverse:   Table(Bits(256),(Bits(256),Integer,Integer,Bits(256),Bits(256),Bool)),
          MACinverse:   Table(Bits(256),(Bits(256), Bits(256), Integer)),
    }

    oracle MAC(k: Bits(256), nonce: Bits(256), i: Integer) -> Bits(256) {
        y <- mac(k,nonce,i);
		if b {
            assert ((MACinverse[y] == None) or (MACinverse[y] == Some((k,nonce,i))));
	    }
        MACinverse[y] <- Some((k,nonce,i));
        return y;
    }

    oracle PRF(k: Bits(256), a: Integer, aa: Integer, c: Bits(256), d: Bits(256), e: Bool) -> Bits(256) {
        y <- prf(k,a,aa,c,d,e);
		if b {
             assert ((PRFinverse[y] == None) or (PRFinverse[y] == Some((k,a,aa,c,d,e))));
		}
        PRFinverse[y] <- Some((k,a,aa,c,d,e));
        return y;
    }
}